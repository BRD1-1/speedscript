local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Speed Simulator",
   Icon = 0,
   LoadingTitle = "Speed Hub",
   LoadingSubtitle = "by BRD11",
   Theme = "Default",

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false,

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil,
      FileName = "Speed Hub"
   },

   Discord = {
      Enabled = false,
      Invite = "noinvitelink",
      RememberJoins = true
   },

   KeySystem = false,
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided",
      FileName = "Key",
      SaveKey = true,
      GrabKeyFromSite = false,
      Key = {"Hello"}
   }
})

local MainTab = Window:CreateTab("Auto Farm", nil)
local MainSection = MainTab:CreateSection("Auto Farm")


local Toggle = MainTab:CreateToggle({ 
   Name = "Auto Farm", 
   CurrentValue = false,
   Flag = "Toggle1",
   Callback = function(Farming) 
      if Farming then
         isActive = 1  -- Turn on the script
         local speed = 0
         game:GetService("ReplicatedStorage").Remotes.Rebirth2:FireServer()
         while isActive == 1 do
             if speed < 500 then
                 game:GetService("ReplicatedStorage").Remotes.Click:FireServer()
                 speed = speed + 1
             else
                 game:GetService("ReplicatedStorage").Remotes.Rebirth2:FireServer()
                 speed = 0
             end
             task.wait()
         end
      else
         isActive = 0  -- Turn off the script
      end
   end,
})


local MiscTab = Window:CreateTab("Misc", nil)
local MainSection = MiscTab:CreateSection("Misc")

local Player = game.Players.LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local RootPart = Character:WaitForChild("HumanoidRootPart")
local Camera = game.Workspace.CurrentCamera

local flying = false
local speed = 50
local bodyVelocity

local Toggle = MiscTab:CreateToggle({
   Name = "Fly",
   CurrentValue = false,
   Flag = "ftoggle", 
   Callback = function(Fly)
      if Fly then
         flying = true
         bodyVelocity = Instance.new("BodyVelocity")
         bodyVelocity.MaxForce = Vector3.new(100000, 100000, 100000)
         bodyVelocity.Velocity = Vector3.new(0, 0, 0)
         bodyVelocity.Parent = RootPart

         game:GetService("UserInputService").InputChanged:Connect(function(input, gameProcessedEvent)
            if flying and not gameProcessedEvent then
               local moveDirection = Vector3.new(0, 0, 0)

               if input.UserInputType == Enum.UserInputType.Keyboard then
                  if input.KeyCode == Enum.KeyCode.W then
                     moveDirection = moveDirection + Camera.CFrame.LookVector
                  elseif input.KeyCode == Enum.KeyCode.S then
                     moveDirection = moveDirection - Camera.CFrame.LookVector
                  elseif input.KeyCode == Enum.KeyCode.A then
                     moveDirection = moveDirection - Camera.CFrame.RightVector
                  elseif input.KeyCode == Enum.KeyCode.D then
                     moveDirection = moveDirection + Camera.CFrame.RightVector
                  end
                  bodyVelocity.Velocity = moveDirection * speed
               elseif input.UserInputType == Enum.UserInputType.Touch then
                  local touchPos = input.Position
                  local screenCenter = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
                  local direction = (touchPos - screenCenter).Unit
                  moveDirection = Vector3.new(direction.X, 0, direction.Y)
                  bodyVelocity.Velocity = moveDirection * speed
               end
            end
         end)
      else
         flying = false
         if bodyVelocity then
            bodyVelocity:Destroy()
         end
      end
   end,
})
